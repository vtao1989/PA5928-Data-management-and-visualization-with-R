[
["index.html", "PA 5928 Data management &amp; visualization with R Chapter 1 Course Syllabus 1.1 Course Description 1.2 Course Prerequisites 1.3 Logistics 1.4 Course Learning Outcomes 1.5 In-class exercise and final project 1.6 Course Schedule (Tentative) 1.7 Homework and projects collaboration and submission policy", " PA 5928 Data management &amp; visualization with R Tao Tao 2019-10-07 Chapter 1 Course Syllabus 1.1 Course Description Introduction to R Studio software. Use of R Studio to carry out R file and related dataset management functions. Tools and techniques for data analysis and statistical programming in quantitative research or related applied areas. Topics include data selection, data manipulation, and data visualization (including charts, plots, histograms, maps, and other graphs). 1.2 Course Prerequisites Introductory statistics; ability to create bar graphs, line graphs, and scatter plots in MS Excel; and familiarity with principles of data visualization. 1.3 Logistics Instructor: Tao Tao, taotao@umn.edu Location: HHH 85 Time: Starting 10/8: Tuesdays 9:45AM to 11:00AM Office hours: Monday Friday 10:00 - 11:00 am at HHH 271 Canvas: All course notes will be posted in this course website, but links will be provided on Canvas. Canvas will also be used to submit your homework, final project, and grades. So you only need to pay attention to Canvas to check everything! 1.4 Course Learning Outcomes At the end of this course, students will be able to: Use R Studio to carry out R file and related dataset management Use R to work with different types of datasets and conduct basic data management Use R to visualize data with different types of plots 1.5 In-class exercise and final project An in-class exercise will be assigned during each class for the students to practice what they have learned. Chime will be used in class to check the class performance in a anonymous way. The in-class exercises will be mostly finished during the class time, and students are still required to submit their codes on the same day with necessary notes to indicate their ideas. Students will use the knowledge from this course to complete a final project (data analysis for a interested research question and write a short report about it). Grading policy In-class exercise codes: 60% Final project: 40% 1.6 Course Schedule (Tentative) # Date Topic Notes 1 10/8 Introduction to R Studio Uploaded 2 10/15 Introduction to R 3 10/22 Data manipulation with dplyr (I) 4 10/29 Data manipulation with dplyr (II) 5 11/5 Data visualization with ggplot2 (I) 6 11/12 Data visualization with ggplot2 (II) 7 11/19 R Statistics (I) 8 11/26 R Statistics (II) 9 12/3 Spatial visualization (I) 10 12/10 Spatial visualization (II) 1.7 Homework and projects collaboration and submission policy Students can discuss their works with other students, but must code and write up notes by themselves Plagiarism is not allowed by the university policies. Please do be careful about this. In-class exercises and projects should be submitted through Canvas. Late homework will not be accepted! When you communicate the instructor with emails, please include PA 5928 at the beginning of your title. "],
["introduction-to-rstudio.html", "Chapter 2 Introduction to RStudio 2.1 What is R 2.2 What is R Studio 2.3 Install R + RStudio 2.4 Familiar with the user interface of R Studio 2.5 Create and save R file 2.6 Print Hello, world 2.7 Install and use R Packages 2.8 Make notes 2.9 Tips (Updating)", " Chapter 2 Introduction to RStudio 2.1 What is R R is a type of programming language and supports many tasks including statistical computation (data cleaning, data management, statistics, machine learning) and grapics (static plots and interactive plots). You can also use it to create website, write papers, analyze texts, etc. The most important thing is that R is free and easy to use, that’s why it has been applied in many fileds. 2.2 What is R Studio RStudio is a programming software for editing and running R code. It has many great features to make R programming easier and more fun! 2.3 Install R + RStudio For better coding and running R, you should install both R and RStudio. You could code R with the installation of R only, however, RStudio provides you with more conveinece during the working process. In this course, we will use RStudio to do all the course lectures and exercises. So please make sure you install both of them! R could be downloaded here and RStudio could be downloaded here. Both Windows OS and Mac OS are supported, so please choose the one you need for your own system. Or you could use the computers in the lab when there is no lecture. 2.4 Familiar with the user interface of R Studio Below is a screenshot of the user interface of RStudio. You will find couple of panes/windows with different usages. Menu/Tool Bar Source The pane where you write and edit your code. Environment/History Environment lists all the variables that you are currently using. History presents the codes you have runned before. Console Console is the original R interactive window. You could run codes and see the results here. Plots/Help Plots window shows the output figures. Help windows presents the information of the function or package you check. 2.5 Create and save R file Three ways to create a R file in the RStudio: 1. Menu -&gt; File -&gt; New File -&gt; R Script 2. Shortcut: Ctrl + Shift + N 3. Tool Bar -&gt; New file button Also three ways to save R file 1. Menu -&gt; File -&gt; Save 2. Shortcut: Ctrl + S 3. Tool Bar -&gt; Save file button 2.6 Print Hello, world Now, let’s try to input some codes and run them! Let’s print the very classic “Hello, world!” with print() function. We could run the codes in several ways: Select the codes or put the cursor in the line of your code, and click the Run button located in the right-top position of the console pane. Select the codes or put the cursor in the line of your code, and use shortcut: Ctrl + Enter You could also click the Re-run button near the Run button to re-run the codes you runned last time print(&#39;Hello, world!&#39;) ## [1] &quot;Hello, world!&quot; Because what we need to output here is a string varible, we have to put them in the quotation mark. Either single quotation or double quotation mark works well. Let’s see another example. print(5928) ## [1] 5928 Here, 5928 is an integer and we do not need to put them in the quotation mark. 2.7 Install and use R Packages R is easy to use because it has many packages with different usages. These packages could help you acomplish some complex tasks with just several lines of codes. Some packages have been already been installed and you could use them directly, which are base packages. However, most of the packages have to be installed before you use them. There are couple of ways you could install a package. Let’s take the gbm package for example. 1. Manu -&gt; Tools -&gt; Install Packages... -&gt; Input the package name -&gt; Click Install button 2. Use the code below: install.packages(&quot;gbm&quot;) After the installation of the package, you have import the it with library() function before you use the functions in it. library(gbm) ## Loaded gbm 2.1.5 We will spend more time in the future classes to explore the various R packages and their different usages. 2.8 Make notes It is important to write notes for your codes. It could help others or even yourself understand your codes easily. Use hash tag to indicate the notes. For example, gbm1 &lt;- gbm(AvgMet~PkAreaH+StpNumH+DisToMin, # formula data=MetM, # dataset var.monotone=c(+1, rep(0,10),rep(0,15)), distribution=&quot;gaussian&quot;, # see the help for other choices n.trees=5000, # number of trees shrinkage=0.001, # shrinkage or learning rate, 0.001 to 0.1 usually work interaction.depth=6, # 1: additive model, 2: two-way interactions, etc. bag.fraction = 0.5, # subsampling fraction, 0.5 is probably best n.minobsinnode = 10, # minimum total weight needed in each node cv.folds = 5) R will not run the codes after hash tags in each line. Please try to write simple but necessary notes for the codes. Keep this as a good habbit and you will thank yourself in the future. 2.9 Tips (Updating) You could divide your codes into sections by interting chunks before each sections with the shortcut: Ctrl + Shift + R. This will help you organize your codes. Use ? or help() function to find the related instruction or help page, for example, if you want to find the instruction of library() function, just ?library or help(library) Both will direct you to the instruction page you are looking for. Reference Introduction to RStudio "]
]
